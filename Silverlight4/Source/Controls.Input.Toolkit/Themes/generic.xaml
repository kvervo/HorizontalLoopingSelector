<!--
// (c) Copyright Microsoft Corporation.
// This source is subject to the Microsoft Public License (Ms-PL).
// Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
// All other rights reserved.
-->

<!--
// WARNING:
// 
// This XAML was automatically generated by merging the individual default
// styles.  Changes to this file may cause incorrect behavior and will be lost
// if the XAML is regenerated.
-->

<ResourceDictionary xmlns:controls="clr-namespace:System.Windows.Controls" xmlns:input="clr-namespace:System.Windows.Controls" xmlns:inputPrimitivesToolkit="clr-namespace:System.Windows.Controls" xmlns:inputToolkit="clr-namespace:System.Windows.Controls" xmlns:inputToolkitPrimitives="clr-namespace:System.Windows.Controls.Primitives" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">

    <!--  controls:ContextMenu  -->
    <Style TargetType="controls:ContextMenu">
        <Setter Property="Background" Value="#FFF5F5F5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF959595" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ContextMenu">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect Color="LightGray" ShadowDepth="3" />
                        </Border.Effect>
                        <Grid>
                            <Rectangle RadiusX="2" RadiusY="2" Fill="#FFF1F1F1" Width="28" Margin="2" HorizontalAlignment="Left" />
                            <Rectangle Fill="#FFE2E3E3" Width="1" Margin="30,2,0,2" HorizontalAlignment="Left" />
                            <Rectangle Fill="#FFFFFFFF" Width="1" Margin="31,2,0,2" HorizontalAlignment="Left" />
                            <!--<ScrollViewer
                                Margin="1,0,1,0"
                                Grid.ColumnSpan="2"
                                BorderThickness="0"
                                VerticalScrollBarVisibility="Auto">-->
                                <ItemsPresenter Margin="{TemplateBinding Padding}" />
                            <!--</ScrollViewer>-->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  controls:MenuItem  -->
    <Style TargetType="controls:MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="4,3,2,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MenuItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Presenter" Storyboard.TargetProperty="Opacity" To="0.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Bg" Storyboard.TargetProperty="Opacity" To="1" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#40FFFFFF" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle RadiusX="2" RadiusY="2" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Rectangle x:Name="Bg" RadiusX="2" RadiusY="2" Stroke="#8071CBF1" StrokeThickness="1" Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#34C5EBFF" Offset="0" />
                                        <GradientStop Color="#3481D8FF" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="InnerBorder" RadiusX="2" RadiusY="2" Stroke="Transparent" Margin="1" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="24" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="*" />
                                <!--<ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto"/>-->
                                <ColumnDefinition Width="17" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding Icon}" Margin="1" VerticalAlignment="Center" />
                            <!--<Border
                                BorderThickness="1"
                                CornerRadius="3"
                                BorderBrush="#FFCDD3E6"
                                Background="#FFE6EFF4"
                                x:Name="GlyphPanel"
                                Width="22"
                                Height="22"
                                Margin="1"
                                Visibility="Collapsed">
                                <Path
                                    Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z"
                                    Fill="#FF0C12A1"
                                    x:Name="Glyph"
                                    Width="9"
                                    Height="11"
                                    FlowDirection="LeftToRight"/>
                            </Border>-->
                            <ContentPresenter x:Name="Presenter" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="{TemplateBinding Padding}" Grid.Column="2" />
                            <!--<TextBlock
                                Text="{TemplateBinding InputGestureText}"
                                Margin="{TemplateBinding Padding}"
                                Grid.Column="4"/>-->
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  controls:Separator  -->
    <Style TargetType="controls:Separator">
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Margin" Value="32,2,2,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Separator">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Height="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  input:ListTimePickerPopup  -->
    <Style TargetType="input:ListTimePickerPopup">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="PopupMinutesInterval" Value="30" />
    <Setter Property="PopupSecondsInterval" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="input:ListTimePickerPopup">
          <Grid Background="Transparent">
            <vsm:VisualStateManager.VisualStateGroups>
              <!-- Common States -->
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualStateGroup.Transitions>
                  <vsm:VisualTransition GeneratedDuration="0" />
                </vsm:VisualStateGroup.Transitions>
                <vsm:VisualState x:Name="Normal" />
                <vsm:VisualState x:Name="Disabled">
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused" />
              </vsm:VisualStateGroup>

              <!-- Contained States -->
              <vsm:VisualStateGroup x:Name="ContainedByPickerStates">
                <vsm:VisualState x:Name="Contained">
                  <Storyboard />
                </vsm:VisualState>
                <vsm:VisualState x:Name="NotContained">
                  <Storyboard />
                </vsm:VisualState>
              </vsm:VisualStateGroup>

              <!-- PopupModeStates -->
              <vsm:VisualStateGroup x:Name="PopupModeStates">
                <vsm:VisualState x:Name="AllowSecondsAndDesignatorsSelection">
                </vsm:VisualState>
                <vsm:VisualState x:Name="AllowTimeDesignatorsSelection">
                </vsm:VisualState>
                <vsm:VisualState x:Name="AllowSecondsSelection">
                </vsm:VisualState>
                <vsm:VisualState x:Name="HoursAndMinutesOnly">
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>

            <ListBox x:Name="ListBox" Style="{TemplateBinding ListBoxStyle}" ItemContainerStyle="{TemplateBinding ListBoxItemStyle}" IsTabStop="True" TabIndex="1" MaxHeight="130" DisplayMemberPath="Key" DataContext="{TemplateBinding TimeItemsSelection}" ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
            </ListBox>

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!--  input:RangeTimePickerPopup  -->
    <Style TargetType="input:RangeTimePickerPopup">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="PopupMinutesInterval" Value="5" />
    <Setter Property="PopupSecondsInterval" Value="0" />
    <Setter Property="Height" Value="300" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Background" Value="White" />
    <Setter Property="SliderStyle">
      <Setter.Value>
        <Style TargetType="Slider">
          <Setter Property="Orientation" Value="Vertical" />
          <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="TimeButtonStyle">
      <Setter.Value>
        <Style TargetType="Button">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="Button">
                <TextBlock x:Name="label" Text="{TemplateBinding Content}" Foreground="Black" Margin="0" Padding="0">
                  <vsm:VisualStateManager.VisualStateGroups>
                    <!-- common states -->
                    <vsm:VisualStateGroup x:Name="CommonStates">
                      <vsm:VisualState x:Name="Normal" />
                      <vsm:VisualState x:Name="Disabled">
                        <Storyboard>
						              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="label" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
							              <SplineColorKeyFrame KeyTime="00:00:00" Value="Gray" />
						              </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                    </vsm:VisualStateGroup>
                  </vsm:VisualStateManager.VisualStateGroups>
                </TextBlock>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <!--<Setter Property="TabNavigation" Value="Cycle" />-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="input:RangeTimePickerPopup">
          <Grid Background="{TemplateBinding Background}">
            <vsm:VisualStateManager.VisualStateGroups>
              
              <!-- Common States -->
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualStateGroup.Transitions>
                  <vsm:VisualTransition GeneratedDuration="0" />
                </vsm:VisualStateGroup.Transitions>
                <vsm:VisualState x:Name="Normal" />
                <vsm:VisualState x:Name="Disabled">
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused" />
              </vsm:VisualStateGroup>
              
              <!-- Contained States -->
              <vsm:VisualStateGroup x:Name="ContainedByPickerStates">
                <vsm:VisualState x:Name="Contained">
                </vsm:VisualState>
                <vsm:VisualState x:Name="NotContained">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Commit" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Cancel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              
              <!-- PopupModeStates -->
              <vsm:VisualStateGroup x:Name="PopupModeStates">
                <vsm:VisualState x:Name="AllowSecondsAndDesignatorsSelection">
                </vsm:VisualState>
                <vsm:VisualState x:Name="AllowTimeDesignatorsSelection">
                </vsm:VisualState>
                <vsm:VisualState x:Name="AllowSecondsSelection">
                </vsm:VisualState>
                <vsm:VisualState x:Name="HoursAndMinutesOnly">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondsPanel" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondsSlider" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            
            <Grid.Resources>
              <Style x:Key="CommitButton" TargetType="Button">
                <Setter Property="Background" Value="#FF1F3B53" />
                <Setter Property="Foreground" Value="#FF000000" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FFA3AEB9" Offset="0" />
                      <GradientStop Color="#FF8399A9" Offset="0.375" />
                      <GradientStop Color="#FF718597" Offset="0.375" />
                      <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid FlowDirection="LeftToRight">
                        <vsm:VisualStateManager.VisualStateGroups>
                          <vsm:VisualStateGroup x:Name="CommonStates">
                            <vsm:VisualState x:Name="Normal" />
                            <vsm:VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Pressed">
                              <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1" />
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#D8FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#8CFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#3FFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                </DoubleAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                          </vsm:VisualStateGroup>
                          <vsm:VisualStateGroup x:Name="FocusStates">
                            <vsm:VisualState x:Name="Focused">
                              <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Unfocused" />
                          </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="White" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                          <Grid Margin="1" Background="{TemplateBinding Background}">
                            <Border x:Name="BackgroundAnimation" Opacity="0" Background="#FF448DCA" />
                            <Rectangle x:Name="BackgroundGradient">
                              <Rectangle.Fill>
                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                  <GradientStop Color="#FFFFFFFF" Offset="0" />
                                  <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                  <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                  <GradientStop Color="#C6FFFFFF" Offset="1" />
                                </LinearGradientBrush>
                              </Rectangle.Fill>
                            </Rectangle>
                            <Grid Margin="5.125,3.5,3.125,3.5">
                              <Path Height="6" HorizontalAlignment="Left" Margin="0.376,0,0,0" VerticalAlignment="Top" Width="6.861" Stretch="Fill" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="1.5" Data="M6.0443821,10.103714 L7.7407737,20.549189 M21.739996,1.5 L7.6783452,20.497122">
                                <Path.Stroke>
                                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF67CA0A" />
                                    <GradientStop Color="#FF498C38" Offset="1" />
                                    <GradientStop Color="#FF29EE5B" Offset="0.375" />
                                  </LinearGradientBrush>
                                </Path.Stroke>
                                <Path.Fill>
                                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF000000" />
                                    <GradientStop Color="#FFFFFFFF" Offset="1" />
                                  </LinearGradientBrush>
                                </Path.Fill>
                              </Path>
                            </Grid>
                          </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" />
                        <Rectangle Margin="0.936,0.904,1.064,1.096" x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="CancelButton" TargetType="Button">
                <Setter Property="Background" Value="#FF1F3B53" />
                <Setter Property="Foreground" Value="#FF000000" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush">
                  <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FFA3AEB9" Offset="0" />
                      <GradientStop Color="#FF8399A9" Offset="0.375" />
                      <GradientStop Color="#FF718597" Offset="0.375" />
                      <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid FlowDirection="LeftToRight">
                        <vsm:VisualStateManager.VisualStateGroups>
                          <vsm:VisualStateGroup x:Name="CommonStates">
                            <vsm:VisualState x:Name="Normal" />
                            <vsm:VisualState x:Name="MouseOver">
                              <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Pressed">
                              <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1" />
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#D8FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#8CFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                  <SplineColorKeyFrame KeyTime="0" Value="#3FFFFFFF" />
                                </ColorAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                </DoubleAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                          </vsm:VisualStateGroup>
                          <vsm:VisualStateGroup x:Name="FocusStates">
                            <vsm:VisualState x:Name="Focused">
                              <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                  <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                              </Storyboard>
                            </vsm:VisualState>
                            <vsm:VisualState x:Name="Unfocused" />
                          </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="White" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                          <Grid Margin="1" Background="{TemplateBinding Background}">
                            <Border x:Name="BackgroundAnimation" Opacity="0" Background="#FF448DCA" />
                            <Rectangle x:Name="BackgroundGradient">
                              <Rectangle.Fill>
                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                  <GradientStop Color="#FFFFFFFF" Offset="0" />
                                  <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                  <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                  <GradientStop Color="#C6FFFFFF" Offset="1" />
                                </LinearGradientBrush>
                              </Rectangle.Fill>
                            </Rectangle>
                            <Grid Margin="5.125,3.5,3.125,3.5">
                              <Path Height="6" HorizontalAlignment="Left" Margin="-1.25,0,0,0" VerticalAlignment="Top" Width="7.75" Fill="#FF000000" Stretch="Fill" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="1.5" Data="M2.5,1.5000099 L20.5,19.50001 M21.739996,1.5 L1.5,19.883999">
                                <Path.Stroke>
                                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFEA7525" />
                                    <GradientStop Color="#FFDA715B" Offset="0.371" />
                                    <GradientStop Color="#FFB72909" Offset="1" />
                                  </LinearGradientBrush>
                                </Path.Stroke>
                              </Path>
                            </Grid>
                          </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" />
                        <Rectangle Margin="0.936,0.904,1.064,1.096" x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
              
            <Grid HorizontalAlignment="Center" Margin="6">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              
              <Slider x:Name="HoursSlider" Grid.Column="0" Style="{TemplateBinding SliderStyle}" Margin="5" Minimum="0" Maximum="23" /> 
              <Grid x:Name="HoursPanel" Margin="5" Grid.Column="1" />

              <Slider x:Name="MinutesSlider" Grid.Column="2" Style="{TemplateBinding SliderStyle}" SmallChange="{TemplateBinding PopupMinutesInterval}" Margin="5" Minimum="0" Maximum="59" />
              <Grid x:Name="MinutesPanel" Margin="5" Grid.Column="3" />

              <Slider x:Name="SecondsSlider" Grid.Column="4" Style="{TemplateBinding SliderStyle}" SmallChange="{TemplateBinding PopupSecondsInterval}" Margin="5" Minimum="0" Maximum="59" />
              <Grid x:Name="SecondsPanel" Margin="5" Grid.Column="5" />

              <StackPanel Grid.Column="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="12,0,0,0">
                <Button x:Name="Commit" Margin="0,15,0,0" HorizontalAlignment="Right" TabIndex="2" Style="{StaticResource CommitButton}" />
                <Button x:Name="Cancel" Margin="0,15,0,0" HorizontalAlignment="Right" TabIndex="3" Style="{StaticResource CancelButton}" />
              </StackPanel>
            </Grid>
              
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!--  input:TimePicker  -->
    <Style TargetType="input:TimePicker">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MinWidth" Value="125" />
    <Setter Property="Height" Value="22" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="PopupTemplate">
      <Setter.Value>
        <inputToolkit:TimePickerPopupTemplate>
          <inputToolkit:ListTimePickerPopup />
        </inputToolkit:TimePickerPopupTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="input:TimePicker">
          <Grid x:Name="RootElement">
            <vsm:VisualStateManager.VisualStateGroups>
              <!-- common states -->
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
                <VisualState x:Name="Pressed" />
              </VisualStateGroup>
              <!-- focus states -->
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <!-- Popup states -->
              <VisualStateGroup x:Name="PopupStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" To="PopupOpened" />
                  <VisualTransition GeneratedDuration="0:0:0.2" To="PopupClosed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="PopupOpened">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="Opacity" To="1.0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PopupClosed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="Opacity" To="0.0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <Grid.Resources>
              <ControlTemplate x:Key="PopupButtonTemplate" TargetType="ToggleButton">
                <!-- clock icon -->
                <Grid FlowDirection="LeftToRight" Height="20" Width="20">
                  <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                      <vsm:VisualStateGroup.Transitions>
                        <vsm:VisualTransition GeneratedDuration="00:00:00.1000000" />
                      </vsm:VisualStateGroup.Transitions>
                      <vsm:VisualState x:Name="Normal" />
                      <vsm:VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.6" />
                          </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
                          </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Disabled">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                          </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="CheckStates">
                      <vsm:VisualState x:Name="Checked">
                        <Storyboard>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.StartPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="1.016,0.377" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.EndPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="-0.01,0.687" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="0.556,0.035" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="0.441,0.979" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.StartPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="0.984,0.328" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.EndPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="0.031,0.719" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.EndPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="-0.047,0.516" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.StartPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="1.016,0.422" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.StartPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="1.062,0.375" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.EndPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="0.031,0.688" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.StartPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="1.031,0.281" />
                          </PointAnimationUsingKeyFrames>
                          <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(Shape.Stroke).(LinearGradientBrush.EndPoint)">
                            <SplinePointKeyFrame KeyTime="00:00:00" Value="-0.188,0.656" />
                          </PointAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Unchecked" />
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="FocusStates">
                      <vsm:VisualState x:Name="Focused"></vsm:VisualState>
                      <vsm:VisualState x:Name="Unfocused" />
                    </vsm:VisualStateGroup>
                  </vsm:VisualStateManager.VisualStateGroups>
                  <Grid>
                    <Grid.Resources>
                      <LinearGradientBrush x:Key="Dot" EndPoint="1.025,0.434" StartPoint="-0.025,0.566">
                        <GradientStop Color="#FFC8C8C8" />
                        <GradientStop Color="#FF19191A" Offset="1" />
                      </LinearGradientBrush>
                    </Grid.Resources>
                    <Ellipse Margin="0,0,0,0" Stroke="#FF0052CA" StrokeThickness="1" x:Name="Highlight" Opacity="0" />
                    <Ellipse Margin="1,1,1,1" Stroke="{StaticResource Dot}" StrokeThickness="0.75" x:Name="ellipse">
                      <Ellipse.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                          <GradientStop Color="#FFFFFFFF" />
                          <GradientStop Color="#FFD7E3EC" Offset="0.80400002002716064" />
                          <GradientStop Color="#FFFBFBFB" Offset="0.37099999189376831" />
                        </LinearGradientBrush>
                      </Ellipse.Fill>
                    </Ellipse>
                    <Ellipse Stroke="{StaticResource Dot}" Height="2" Margin="8,2,8,0" VerticalAlignment="Top" Width="2" x:Name="ellipse1">
                      <Ellipse.Fill>
                        <RadialGradientBrush>
                          <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                              <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.381" ScaleY="1.817" />
                              <SkewTransform CenterX="0.5" CenterY="0.5" />
                              <RotateTransform Angle="0.966" CenterX="0.5" CenterY="0.5" />
                              <TranslateTransform X="-0.2" Y="0.087" />
                            </TransformGroup>
                          </RadialGradientBrush.RelativeTransform>
                          <GradientStop Color="#FF000000" />
                          <GradientStop Color="#FFFB6A05" Offset="1" />
                          <GradientStop Color="#FF4E4E4F" Offset="0.446" />
                        </RadialGradientBrush>
                      </Ellipse.Fill>
                    </Ellipse>
                    <Ellipse Height="2" Margin="8,0,8,2" VerticalAlignment="Bottom" Stroke="{StaticResource Dot}" Width="2" x:Name="ellipse2">
                      <Ellipse.Fill>
                        <RadialGradientBrush>
                          <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                              <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.381" ScaleY="1.817" />
                              <SkewTransform CenterX="0.5" CenterY="0.5" />
                              <RotateTransform Angle="0.966" CenterX="0.5" CenterY="0.5" />
                              <TranslateTransform X="-0.2" Y="0.087" />
                            </TransformGroup>
                          </RadialGradientBrush.RelativeTransform>
                          <GradientStop Color="#FF000000" />
                          <GradientStop Color="#FFFB6A05" Offset="1" />
                          <GradientStop Color="#FF4E4E4F" Offset="0.446" />
                        </RadialGradientBrush>
                      </Ellipse.Fill>
                    </Ellipse>
                    <Ellipse HorizontalAlignment="Left" Margin="2,10,0,0" Width="1" Stroke="{StaticResource Dot}" VerticalAlignment="Top" Height="1" x:Name="ellipse3">
                      <Ellipse.Fill>
                        <RadialGradientBrush>
                          <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                              <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.381" ScaleY="1.817" />
                              <SkewTransform CenterX="0.5" CenterY="0.5" />
                              <RotateTransform Angle="0.966" CenterX="0.5" CenterY="0.5" />
                              <TranslateTransform X="-0.2" Y="0.087" />
                            </TransformGroup>
                          </RadialGradientBrush.RelativeTransform>
                          <GradientStop Color="#FF000000" />
                          <GradientStop Color="#FFFB6A05" Offset="1" />
                          <GradientStop Color="#FF4E4E4F" Offset="0.446" />
                        </RadialGradientBrush>
                      </Ellipse.Fill>
                    </Ellipse>
                    <Ellipse HorizontalAlignment="Right" Margin="0,10,2,0" Width="1.05" Stroke="{StaticResource Dot}" VerticalAlignment="Top" Height="1.421" x:Name="ellipse4">
                      <Ellipse.Fill>
                        <RadialGradientBrush>
                          <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                              <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.381" ScaleY="1.817" />
                              <SkewTransform CenterX="0.5" CenterY="0.5" />
                              <RotateTransform Angle="0.966" CenterX="0.5" CenterY="0.5" />
                              <TranslateTransform X="-0.2" Y="0.087" />
                            </TransformGroup>
                          </RadialGradientBrush.RelativeTransform>
                          <GradientStop Color="#FF000000" />
                          <GradientStop Color="#FFFB6A05" Offset="1" />
                          <GradientStop Color="#FF4E4E4F" Offset="0.446" />
                        </RadialGradientBrush>
                      </Ellipse.Fill>
                    </Ellipse>
                    <Path Fill="{x:Null}" Height="8.258" Margin="9,6,5,0" VerticalAlignment="Top" Stretch="Fill" Data="M10.108397,6.5404582 L10.108397,10.415268 L13.538931,13.738435" HorizontalAlignment="Left">
                      <Path.Stroke>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                          <GradientStop Color="#FF5B91D2" />
                          <GradientStop Color="#FFC1570E" Offset="0.996" />
                        </LinearGradientBrush>
                      </Path.Stroke>
                    </Path>
                    <!-- disabled visual -->
                    <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" />
                  </Grid>
                </Grid>
              </ControlTemplate>
            </Grid.Resources>
            
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <!-- Value is being synched in code, because of inability to do TwoWay TemplateBinding -->
            <inputToolkit:TimeUpDown x:Name="TimeUpDown" Height="Auto" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{TemplateBinding TimeUpDownStyle}" SpinnerStyle="{TemplateBinding SpinnerStyle}" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" TimeParsers="{TemplateBinding TimeParsers}" Format="{TemplateBinding Format}" Culture="{TemplateBinding Culture}" TimeGlobalizationInfo="{TemplateBinding TimeGlobalizationInfo}" Grid.Column="0" />
            <ToggleButton x:Name="DropDownToggle" Template="{StaticResource PopupButtonTemplate}" Margin="3,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" />
            <!-- Value is being synched in code, because of inability to do TwoWay TemplateBinding -->
            <Popup x:Name="Popup">
              <Border x:Name="PopupRoot" BorderBrush="#FF8d8b8b" BorderThickness="1">
                <ContentControl x:Name="PopupPlaceHolder" IsTabStop="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!--  inputPrimitivesToolkit:ButtonSpinner  -->
    <Style TargetType="inputPrimitivesToolkit:ButtonSpinner">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="inputPrimitivesToolkit:ButtonSpinner">
          <Grid>
            <Grid.Resources>
              <ControlTemplate x:Key="IncreaseButtonTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root">
                  <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                      <vsm:VisualStateGroup.Transitions>
                        <vsm:VisualTransition GeneratedDuration="0" />
                        <vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
                        <vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
                      </vsm:VisualStateGroup.Transitions>
                      <vsm:VisualState x:Name="Normal" />
                      <vsm:VisualState x:Name="MouseOver">
                        <Storyboard>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF448DCA" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#F2FFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#CCFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#7FFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                          </DoubleAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF448DCA" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#F4FFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#EAFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#C6FFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#6BFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Disabled">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                          </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="FocusStates">
                      <vsm:VisualState x:Name="Focused">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Unfocused" />
                    </vsm:VisualStateGroup>
                  </vsm:VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" StrokeThickness="1" RadiusX="2" RadiusY="2">
                    <Rectangle.Stroke>
                      <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                        <GradientStop Color="#FFAEB7BF" Offset="0" />
                        <GradientStop Color="#FF919EA7" Offset="0.35" />
                        <GradientStop Color="#FF7A8A99" Offset="0.35" />
                        <GradientStop Color="#FF647480" Offset="1" />
                      </LinearGradientBrush>
                    </Rectangle.Stroke>
                  </Rectangle>
                  <Rectangle Margin="1" x:Name="BackgroundGradient" Stroke="#FFFFFFFF" StrokeThickness="1" RadiusX="1" RadiusY="1">
                    <Rectangle.Fill>
                      <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                        <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                        <GradientStop Color="#C6FFFFFF" Offset="1" />
                      </LinearGradientBrush>
                    </Rectangle.Fill>
                  </Rectangle>
                  <Rectangle Margin="1" x:Name="Highlight" IsHitTestVisible="false" Opacity="0" Stroke="#FF45D6FA" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                  <Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" />
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" Stroke="#FF45D6FA" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                  <Path HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#FF333333" Stretch="Uniform" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Margin="4,3,4,3" />
                </Grid>
              </ControlTemplate>
              <ControlTemplate x:Key="DecreaseButtonTemplate" TargetType="RepeatButton">
                <Grid x:Name="Root">
                  <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup x:Name="CommonStates">
                      <vsm:VisualStateGroup.Transitions>
                        <vsm:VisualTransition GeneratedDuration="0" />
                        <vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
                        <vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
                      </vsm:VisualStateGroup.Transitions>
                      <vsm:VisualState x:Name="Normal" />
                      <vsm:VisualState x:Name="MouseOver">
                        <Storyboard>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF448DCA" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#F2FFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#CCFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#7FFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Pressed">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                          </DoubleAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF448DCA" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#F4FFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#EAFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#C6FFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                          <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#6BFFFFFF" />
                          </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Disabled">
                        <Storyboard>
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                          </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                    </vsm:VisualStateGroup>
                    <vsm:VisualStateGroup x:Name="FocusStates">
                      <vsm:VisualState x:Name="Focused">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </vsm:VisualState>
                      <vsm:VisualState x:Name="Unfocused" />
                    </vsm:VisualStateGroup>
                  </vsm:VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" StrokeThickness="1" RadiusX="2" RadiusY="2">
                    <Rectangle.Stroke>
                      <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                        <GradientStop Color="#FFAEB7BF" Offset="0" />
                        <GradientStop Color="#FF919EA7" Offset="0.35" />
                        <GradientStop Color="#FF7A8A99" Offset="0.35" />
                        <GradientStop Color="#FF647480" Offset="1" />
                      </LinearGradientBrush>
                    </Rectangle.Stroke>
                  </Rectangle>
                  <Rectangle Margin="1" x:Name="BackgroundGradient" Stroke="#FFFFFFFF" StrokeThickness="1" RadiusX="1" RadiusY="1">
                    <Rectangle.Fill>
                      <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                        <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                        <GradientStop Color="#C6FFFFFF" Offset="1" />
                      </LinearGradientBrush>
                    </Rectangle.Fill>
                  </Rectangle>
                  <Rectangle Margin="1" x:Name="Highlight" IsHitTestVisible="false" Opacity="0" Stroke="#FF45D6FA" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                  <Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" />
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" Stroke="#FF45D6FA" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                  <Path Height="Auto" HorizontalAlignment="Stretch" Margin="4,3,4,3" VerticalAlignment="Stretch" Width="Auto" Fill="#FF333333" Stretch="Uniform" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " />
                </Grid>
              </ControlTemplate>
            </Grid.Resources>
            <vsm:VisualStateManager.VisualStateGroups>
              <!-- common states -->
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualStateGroup.Transitions>
                  <vsm:VisualTransition GeneratedDuration="0" />
                </vsm:VisualStateGroup.Transitions>
                <vsm:VisualState x:Name="Normal" />
                <vsm:VisualState x:Name="MouseOver">
                    <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                      <SplineColorKeyFrame KeyTime="0" Value="#FF99C1E2" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="presentationSite" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                        <SolidColorBrush Color="Gray" />
                          </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ElementContainer" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <SolidColorBrush Color="Gray" />
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <!-- focus states -->
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused" />
              </vsm:VisualStateGroup>
              <!-- Increase states -->
              <vsm:VisualStateGroup x:Name="IncreaseStates">
                <vsm:VisualState x:Name="IncreaseEnabled" />
                <vsm:VisualState x:Name="IncreaseDisabled" />
              </vsm:VisualStateGroup>
              <!-- Decrease states-->
              <vsm:VisualStateGroup x:Name="DecreaseStates">
                <vsm:VisualState x:Name="DecreaseEnabled" />
                <vsm:VisualState x:Name="DecreaseDisabled" />
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
                  <Border x:Name="ElementContainer" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
              <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="Transparent">
                <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                  <ContentControl x:Name="presentationSite" Grid.RowSpan="2" IsTabStop="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" />
                <Button IsTabStop="False" IsHitTestVisible="True" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                  <Button.Template>
                    <ControlTemplate TargetType="Button">
                      <Grid Background="Transparent" />
                    </ControlTemplate>
                  </Button.Template>
                </Button>
                <RepeatButton Grid.Row="0" Grid.Column="1" IsTabStop="False" Template="{StaticResource IncreaseButtonTemplate}" x:Name="IncreaseButton" ClickMode="Press" />
                <RepeatButton Grid.Row="1" Grid.Column="1" IsTabStop="False" Template="{StaticResource DecreaseButtonTemplate}" x:Name="DecreaseButton" ClickMode="Press" />
              </Grid>
            </Border>
            </Border>
            <Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderBrush="#FF45D6FA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!--  inputToolkit:DomainUpDown  -->
    <Style TargetType="inputToolkit:DomainUpDown">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Height" Value="22" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="inputToolkit:DomainUpDown">
          <Grid x:Name="RootElement">
            <vsm:VisualStateManager.VisualStateGroups>
              <!-- common states -->
              <vsm:VisualStateGroup x:Name="CommonStates">
                <vsm:VisualState x:Name="Normal" />
                <vsm:VisualState x:Name="Pressed" />
                <vsm:VisualState x:Name="MouseOver">
                 <!-- composite controls will visualize mouseover state -->
                </vsm:VisualState>
                <vsm:VisualState x:Name="Disabled">
                  <!-- composite controls will visualize disabled state -->
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <!-- focus states -->
              <vsm:VisualStateGroup x:Name="FocusStates">
                <vsm:VisualState x:Name="Focused">
                  <!-- composite controls will gain focus and visualize it -->
                </vsm:VisualState>
                <vsm:VisualState x:Name="Unfocused">
                  <!-- composite controls will gain focus and visualize it -->
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <!-- interaction mode states -->
              <vsm:VisualStateGroup x:Name="InteractionModeStates">
                <vsm:VisualState x:Name="Edit">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Text" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Visualization" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="Display" />
              </vsm:VisualStateGroup>
              <!-- input valid states -->
              <vsm:VisualStateGroup x:Name="DomainStates">
                <vsm:VisualState x:Name="ValidDomain">
                </vsm:VisualState>
                <vsm:VisualState x:Name="InvalidDomain">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ErrorVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <!-- the actual control -->
            <inputToolkit:ButtonSpinner x:Name="Spinner" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{TemplateBinding SpinnerStyle}" IsTabStop="False" TabIndex="3">
              <Grid>
                <ContentControl x:Name="Visualization" Margin="0" Padding="0" Opacity="1" IsTabStop="False" IsHitTestVisible="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Value}" ContentTemplate="{TemplateBinding ItemTemplate}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" Foreground="{TemplateBinding Foreground}" />
                <TextBox x:Name="Text" Opacity="0" Margin="0" Padding="0" IsTabStop="True" Background="Red" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" BorderThickness="0" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" Foreground="{TemplateBinding Foreground}" AcceptsReturn="False" IsHitTestVisible="False" TextWrapping="NoWrap">
                  <TextBox.Style>
                    <Style TargetType="TextBox">
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="TextBox">
                            <ScrollViewer x:Name="ContentElement" Padding="0" BorderThickness="0" />
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </TextBox.Style>
                </TextBox>
              </Grid>
          </inputToolkit:ButtonSpinner>
            <Border x:Name="ErrorVisualElement" CornerRadius="1" Visibility="Collapsed" Margin="-2" IsHitTestVisible="False" BorderBrush="Red" BorderThickness="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!--  inputToolkit:NumericUpDown  -->
    <Style TargetType="inputToolkit:NumericUpDown">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="22" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:NumericUpDown">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused" />
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <inputToolkit:ButtonSpinner x:Name="Spinner" MinWidth="35" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                          <TextBox BorderThickness="0" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" MinWidth="20" x:Name="Text" AcceptsReturn="False" Text="{TemplateBinding Value}" TextAlignment="Right" TextWrapping="NoWrap">
                            <TextBox.Style>
                              <Style TargetType="TextBox">
                                <Setter Property="Template">
                                  <Setter.Value>
                                    <ControlTemplate TargetType="TextBox">
                                      <ScrollViewer x:Name="ContentElement" Padding="0" BorderThickness="0" />
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                              </Style>
                            </TextBox.Style>
                          </TextBox>
                        </inputToolkit:ButtonSpinner>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF" CornerRadius="2.5,2.5,2.5,2.5" />
                        <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF45D6FA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  inputToolkit:Picker  -->
    <Style TargetType="inputToolkit:Picker">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="inputToolkit:Picker">
          <Grid x:Name="RootElement">
            <vsm:VisualStateManager.VisualStateGroups>
              <!-- Popup states -->
              <VisualStateGroup x:Name="PopupStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" To="PopupOpened" />
                  <VisualTransition GeneratedDuration="0:0:0.2" To="PopupClosed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="PopupOpened">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="Opacity" To="1.0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PopupClosed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="Opacity" To="0.0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            
            <ToggleButton x:Name="DropDownToggle" Content="Toggle popup" />
            
            <Popup x:Name="Popup">
              <Border x:Name="PopupRoot" HorizontalAlignment="Stretch" BorderThickness="0" CornerRadius="3">
                <!-- place content here. -->
              </Border>
            </Popup>
            
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!--  inputToolkit:Rating  -->
    <Style TargetType="inputToolkit:Rating" xmlns:inputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit">
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="#FF545454" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground">
            <Setter.Value>
                <RadialGradientBrush Center="0.548,0.475" GradientOrigin="0.484,0.537">
                    <GradientStop Color="#FFB10000" Offset="1" />
                    <GradientStop Color="#FFF70000" />
                    <GradientStop Color="#FFFA0000" Offset="0.043" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:Rating">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.03" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsPresenter />
                        </Border>
                        <Border x:Name="ReadOnlyVisualElement" IsHitTestVisible="False" Opacity="0" Background="#83FFFFFF" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#FF4D4D4D" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="FocusVisualElement" StrokeThickness="1" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  inputToolkit:RatingItem  -->
    <Style TargetType="inputToolkit:RatingItem">
        <Setter Property="BorderBrush" Value="#FF545454" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:RatingItem">
                    <Grid Background="{TemplateBinding Background}" Width="20">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.2000000" />
                                    <VisualTransition From="MouseOver" GeneratedDuration="00:00:00.2000000" To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverHighlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.325" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverHighlight" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6E0000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedRatingItem" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FFFEFEFE" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.39" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledRatingItemBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ReadOnlyRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1000000" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FillStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1000000" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Empty" />
                                <VisualState x:Name="Partial" />
                                <VisualState x:Name="Filled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="#02FFFFFF" BorderThickness="0" />
                        <Path x:Name="DefaultRatingItem" Fill="White" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" StrokeLineJoin="Round" StrokeThickness="0.4" VerticalAlignment="Stretch" Opacity="1" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <inputToolkitPrimitives:LinearClipper RatioVisible="{TemplateBinding DisplayValue}" ExpandDirection="Right">
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="1" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        </inputToolkitPrimitives:LinearClipper>
                        <Path x:Name="MouseOverRatingItem" Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="0" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <Path x:Name="MouseOverHighlight" Fill="#FFFFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="0" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <Path x:Name="PressedRatingItem" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" Fill="#82000000" Opacity="0" />
                        <Path x:Name="FocusRatingItem" Stretch="Fill" Stroke="#FF6DBDD1" StrokeLineJoin="Round" StrokeThickness="0.01" VerticalAlignment="Stretch" Opacity="0" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" />
                        <Path x:Name="ReadOnlyRatingItem" Fill="#18FFFFFF" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" StrokeLineJoin="Round" StrokeThickness="0.4" VerticalAlignment="Stretch" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" IsHitTestVisible="False" Opacity="0" />
                        <Path x:Name="DisabledRatingItemBackground" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" Fill="Gainsboro" Opacity="0" />
                        <inputToolkitPrimitives:LinearClipper x:Name="DisabledRatingItem" RatioVisible="{TemplateBinding DisplayValue}" ExpandDirection="Right" Opacity="0">
                            <Path Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" VerticalAlignment="Stretch" Opacity="1" UseLayoutRounding="False" Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 z" Fill="#FF5E5E5E" />
                        </inputToolkitPrimitives:LinearClipper>
                        <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.RowSpan="2" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  inputToolkit:TimeUpDown  -->
    <Style TargetType="inputToolkit:TimeUpDown">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Height" Value="22" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MinWidth" Value="100" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="inputToolkit:TimeUpDown">
          <Grid>
            <!-- visual states -->
            <vsm:VisualStateManager.VisualStateGroups>
              <!-- common states-->
              <vsm:VisualStateGroup x:Name="CommonStates">
                <!-- all contained elements are controls that will take
                    care of visualizing the disabled state themselves -->
                <vsm:VisualStateGroup.Transitions>
                  <vsm:VisualTransition GeneratedDuration="0" />
                </vsm:VisualStateGroup.Transitions>
                <vsm:VisualState x:Name="Normal" />
                <vsm:VisualState x:Name="MouseOver" />
                <vsm:VisualState x:Name="Pressed" />
                <vsm:VisualState x:Name="Disabled" />
              </vsm:VisualStateGroup>
              <!-- focus states -->
              <vsm:VisualStateGroup x:Name="FocusStates">
                <!-- all contained elements are controls that will take
                    care of visualizing the focus state themselves -->
                <vsm:VisualState x:Name="Focused" />
                <vsm:VisualState x:Name="Unfocused" />
              </vsm:VisualStateGroup>
              <!-- TimeHintStates -->
              <vsm:VisualStateGroup x:Name="TimeHintStates">
                <vsm:VisualState x:Name="TimeHintOpenedUp">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00.200" KeySpline="0,0,0,1" Value="-23" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="Height">
                      <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.200" KeySpline="0,0,0,1" Value="22" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="TimeHintOpenedDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00.200" KeySpline="0,0,0,1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="Height">
                      <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.200" KeySpline="0,0,0,1" Value="22" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="TimeHintClosed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:20" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00.200" KeySpline="0,0,0,1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TimeHintVisualElement" Storyboard.TargetProperty="Height">
                      <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="22" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.200" KeySpline="0,0,0,1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
              <!-- ParsingStates -->
              <vsm:VisualStateGroup x:Name="ParsingStates">
                <vsm:VisualState x:Name="ValidTime">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="validicon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="InvalidTime">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="invalidicon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
                <vsm:VisualState x:Name="EmptyTime">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="emptyicon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </vsm:VisualState>
              </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <!-- Spinner + HintVisualElement + TextBox -->
            <!-- the border will be 'flown out' to act as a balloon -->
            <Popup x:Name="TimeHintPopup" VerticalOffset="0">
              <Border x:Name="TimeHintVisualElement" IsHitTestVisible="True" BorderBrush="Gray" Background="White" Visibility="Collapsed" HorizontalAlignment="Left" BorderThickness="1">
                <Border.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </Border.RenderTransform>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" MinWidth="15" />
                  </Grid.ColumnDefinitions>
                  <ContentControl Grid.Column="0" IsTabStop="False" IsHitTestVisible="False" Margin="3" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="#FF4A4A4A" FontSize="10" Content="{TemplateBinding TimeHintContent}" />
                  <ContentControl x:Name="emptyicon" IsTabStop="False" IsHitTestVisible="False" Margin="3" Visibility="Collapsed" Grid.Column="1" />
                  <ContentControl x:Name="validicon" IsHitTestVisible="False" IsTabStop="False" Margin="3" Visibility="Collapsed" Grid.Column="1" />
                  <ContentControl x:Name="invalidicon" IsTabStop="False" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Grid.Column="1">
                    <Grid VerticalAlignment="Bottom" Width="10" Height="13">
                      <Path Stretch="Fill" Data="F1 M 28.1143,29.4857L 28.1143,27.4286L 20.7612,13.0286L 19.3898,13.0286L 12.3429,27.4286L 12.3429,29.4857L 28.1143,29.4857 Z " StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Bevel" Height="11.833" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                        <Path.Stroke>
                          <LinearGradientBrush StartPoint="1.10074,0.462591" EndPoint="-0.102151,0.462591">
                            <GradientStop Color="#F6CAA709" Offset="0.0436364" />
                            <GradientStop Color="#F3F7F34F" Offset="0.149091" />
                            <GradientStop Color="#E7CAA709" Offset="0.825455" />
                            <GradientStop Color="#E7967C07" Offset="0.967124" />
                            <GradientStop Color="#E7625106" Offset="0.967273" />
                          </LinearGradientBrush>
                        </Path.Stroke>
                        <Path.Fill>
                          <LinearGradientBrush StartPoint="1.13883,0.460318" EndPoint="-0.140331,0.460318">
                            <GradientStop Color="#FFF7F79F" Offset="0.123636" />
                            <GradientStop Color="#FBFBFB7D" Offset="0.177662" />
                            <GradientStop Color="#F6FFFF5B" Offset="0.24" />
                            <GradientStop Color="#E7CAA709" Offset="0.52" />
                            <GradientStop Color="#9ADABE0C" Offset="0.941376" />
                            <GradientStop Color="#4DEBD60F" Offset="0.941818" />
                            <GradientStop Color="#FBF6EC20" Offset="0.956364" />
                            <GradientStop Color="#FFFFFF2F" Offset="0.963636" />
                          </LinearGradientBrush>
                        </Path.Fill>
                      </Path>
                      <Path Stretch="Fill" StrokeThickness="0.3" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Bevel" Stroke="#FF1B1B54" Data="F1 M 18.6937,17.3004L 22.2563,17.3004L 21.1313,23.6937L 19.8563,23.6937L 18.6937,17.3004 Z " Margin="4.25,2.25,3.75,0" Height="4.683" VerticalAlignment="Top">
                        <Path.Fill>
                          <LinearGradientBrush StartPoint="-0.400002,0.50126" EndPoint="1.4,0.50126">
                            <GradientStop Color="#FFF7F79F" Offset="0.123636" />
                            <GradientStop Color="#FB8F8873" Offset="0.175974" />
                            <GradientStop Color="#F6271A47" Offset="0.236364" />
                            <GradientStop Color="#E7271A47" Offset="0.534545" />
                            <GradientStop Color="#9A89782B" Offset="0.941391" />
                            <GradientStop Color="#4DEBD60F" Offset="0.941818" />
                            <GradientStop Color="#FBF6EC20" Offset="0.956364" />
                            <GradientStop Color="#FFFFFF2F" Offset="0.963636" />
                          </LinearGradientBrush>
                        </Path.Fill>
                      </Path>
                      <Path Height="3.11" Stretch="Fill" StrokeThickness="0.3" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="#FF1C1C50" Data="F1 M 20.225,25.122L 20.725,25.122C 21.2773,25.122 21.725,25.5697 21.725,26.122L 21.725,26.872C 21.725,27.4243 21.2773,27.872 20.725,27.872L 20.225,27.872C 19.6727,27.872 19.225,27.4243 19.225,26.872L 19.225,26.122C 19.225,25.5697 19.6727,25.122 20.225,25.122 Z " Margin="3.833,0,4.167,0.833" VerticalAlignment="Bottom">
                        <Path.Fill>
                          <LinearGradientBrush StartPoint="-0.0599991,0.5" EndPoint="1.06,0.5">
                            <GradientStop Color="#F6271A47" Offset="0.236364" />
                            <GradientStop Color="#E7271A47" Offset="0.534545" />
                            <GradientStop Color="#9A89782B" Offset="0.98135" />
                            <GradientStop Color="#4DEBD60F" Offset="0.981818" />
                          </LinearGradientBrush>
                        </Path.Fill>
                      </Path>
                    </Grid>
                  </ContentControl>
                </Grid>
              </Border>
            </Popup>
               <inputToolkit:ButtonSpinner x:Name="Spinner" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{TemplateBinding SpinnerStyle}" MinWidth="35" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False">
              <TextBox x:Name="Text" BorderThickness="0" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" MinWidth="20" AcceptsReturn="False" Text="{TemplateBinding Value}" TextAlignment="Right" TextWrapping="NoWrap">
                <TextBox.Style>
                  <Style TargetType="TextBox">
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                          <ScrollViewer x:Name="ContentElement" Padding="0" BorderThickness="0" />
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </inputToolkit:ButtonSpinner>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!--  inputToolkit:UpDownBase  -->
    <Style TargetType="inputToolkit:UpDownBase">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="22" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:UpDownBase">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused" />
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <inputToolkit:ButtonSpinner x:Name="Spinner" MinWidth="35" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <TextBox BorderThickness="0" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" MinWidth="20" x:Name="Text" AcceptsReturn="False" TextAlignment="Right" TextWrapping="NoWrap">
                  <TextBox.Style>
                    <Style TargetType="TextBox">
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="TextBox">
                            <ScrollViewer x:Name="ContentElement" Padding="0" BorderThickness="0" />
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </TextBox.Style>
                </TextBox>
              </inputToolkit:ButtonSpinner>
                        </Border>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF" CornerRadius="2.5,2.5,2.5,2.5" />
                        <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF45D6FA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>