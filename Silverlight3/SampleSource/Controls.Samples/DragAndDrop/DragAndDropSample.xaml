<!--
// (c) Copyright Microsoft Corporation.
// This source is subject to the Microsoft Public License (Ms-PL).
// Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
// All other rights reserved.
-->

<UserControl x:Class="System.Windows.Controls.Samples.DragAndDropSample"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:win="clr-namespace:System.Windows;assembly=System.Windows.Controls"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:msWindows="clr-namespace:Microsoft.Windows;assembly=System.Windows.Controls.Toolkit"
    xmlns:controlsToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
    xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
    xmlns:layoutToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit">
    <StackPanel>
        <ContentControl Content="Drag and drop employees between any two controls." Style="{StaticResource Header}"/>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="400"/>
                <RowDefinition Height="400"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="All Employees" Grid.Column="0" Grid.Row="0" Style="{StaticResource Description}" />
            <controlsToolkit:ListBoxDragDropTarget Grid.Column="0" Grid.Row="1" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <ListBox x:Name="fromListBox" SelectionMode="Extended" DisplayMemberPath="Name">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </controlsToolkit:ListBoxDragDropTarget>

            <TextBlock Text="Organization Hierarchy" Grid.Column="1" Grid.Row="0" Style="{StaticResource Description}"/>
            <controlsToolkit:TreeViewDragDropTarget Grid.Column="1" Grid.Row="1" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <controlsToolkit:TreeViewDragDropTarget.Resources>
                    <win:HierarchicalDataTemplate x:Key="hierarchicalTemplate" ItemsSource="{Binding Reports}">
                        <TextBlock Text="{Binding Name}" />
                    </win:HierarchicalDataTemplate>
                </controlsToolkit:TreeViewDragDropTarget.Resources>
                <controls:TreeView x:Name="treeView" ItemTemplate="{StaticResource hierarchicalTemplate}" />
            </controlsToolkit:TreeViewDragDropTarget>


            <chartingToolkit:DataPointSeriesDragDropTarget Grid.Column="0" Grid.Row="2" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <chartingToolkit:Chart x:Name="bugsChart" Title="Employee Bug Counts">
                    <chartingToolkit:ColumnSeries IndependentValueBinding="{Binding Name}" DependentValueBinding="{Binding AssignedBugs}" Title="Assigned Bugs" />
                    <chartingToolkit:ColumnSeries IndependentValueBinding="{Binding Name}" DependentValueBinding="{Binding ResolvedBugs}" Title="Resolved Bugs" />
                </chartingToolkit:Chart>
            </chartingToolkit:DataPointSeriesDragDropTarget>


            <chartingToolkit:DataPointSeriesDragDropTarget Grid.Column="1" Grid.Row="2" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <chartingToolkit:Chart x:Name="salaryChart" Title="Employee Salaries" >
                    <chartingToolkit:PieSeries IndependentValueBinding="{Binding Name}" DependentValueBinding="{Binding Salary}" Title="Salary" />
                </chartingToolkit:Chart>
            </chartingToolkit:DataPointSeriesDragDropTarget>
        </Grid>
        
<src:SourceViewer xmlns:src="clr-namespace:System.Windows.Controls.Samples;assembly=System.Windows.Controls.Samples.Common" xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <src:SourceFile Path="DragAndDropSample.xaml">
    <src:SourceFile.Source>
      <sys:String>&lt;!--
// (c) Copyright Microsoft Corporation.
// This source is subject to the Microsoft Public License (Ms-PL).
// Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
// All other rights reserved.
--&gt;

&lt;UserControl x:Class="System.Windows.Controls.Samples.DragAndDropSample"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:win="clr-namespace:System.Windows;assembly=System.Windows.Controls"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:msWindows="clr-namespace:Microsoft.Windows;assembly=System.Windows.Controls.Toolkit"
    xmlns:controlsToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
    xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
    xmlns:layoutToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit"&gt;
    &lt;StackPanel&gt;
        &lt;ContentControl Content="Drag and drop employees between any two controls." Style="{StaticResource Header}"/&gt;
        &lt;Grid&gt;
            &lt;Grid.RowDefinitions&gt;
                &lt;RowDefinition Height="Auto"/&gt;
                &lt;RowDefinition Height="400"/&gt;
                &lt;RowDefinition Height="400"/&gt;
            &lt;/Grid.RowDefinitions&gt;
            &lt;Grid.ColumnDefinitions&gt;
                &lt;ColumnDefinition Width="400"/&gt;
                &lt;ColumnDefinition Width="400"/&gt;
            &lt;/Grid.ColumnDefinitions&gt;

            &lt;TextBlock Text="All Employees" Grid.Column="0" Grid.Row="0" Style="{StaticResource Description}" /&gt;
            &lt;controlsToolkit:ListBoxDragDropTarget Grid.Column="0" Grid.Row="1" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"&gt;
                &lt;ListBox x:Name="fromListBox" SelectionMode="Extended" DisplayMemberPath="Name"&gt;
                    &lt;ListBox.ItemsPanel&gt;
                        &lt;ItemsPanelTemplate&gt;
                            &lt;StackPanel Orientation="Vertical" /&gt;
                        &lt;/ItemsPanelTemplate&gt;
                    &lt;/ListBox.ItemsPanel&gt;
                &lt;/ListBox&gt;
            &lt;/controlsToolkit:ListBoxDragDropTarget&gt;

            &lt;TextBlock Text="Organization Hierarchy" Grid.Column="1" Grid.Row="0" Style="{StaticResource Description}"/&gt;
            &lt;controlsToolkit:TreeViewDragDropTarget Grid.Column="1" Grid.Row="1" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"&gt;
                &lt;controlsToolkit:TreeViewDragDropTarget.Resources&gt;
                    &lt;win:HierarchicalDataTemplate x:Key="hierarchicalTemplate" ItemsSource="{Binding Reports}"&gt;
                        &lt;TextBlock Text="{Binding Name}" /&gt;
                    &lt;/win:HierarchicalDataTemplate&gt;
                &lt;/controlsToolkit:TreeViewDragDropTarget.Resources&gt;
                &lt;controls:TreeView x:Name="treeView" ItemTemplate="{StaticResource hierarchicalTemplate}" /&gt;
            &lt;/controlsToolkit:TreeViewDragDropTarget&gt;


            &lt;chartingToolkit:DataPointSeriesDragDropTarget Grid.Column="0" Grid.Row="2" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"&gt;
                &lt;chartingToolkit:Chart x:Name="bugsChart" Title="Employee Bug Counts"&gt;
                    &lt;chartingToolkit:ColumnSeries IndependentValueBinding="{Binding Name}" DependentValueBinding="{Binding AssignedBugs}" Title="Assigned Bugs" /&gt;
                    &lt;chartingToolkit:ColumnSeries IndependentValueBinding="{Binding Name}" DependentValueBinding="{Binding ResolvedBugs}" Title="Resolved Bugs" /&gt;
                &lt;/chartingToolkit:Chart&gt;
            &lt;/chartingToolkit:DataPointSeriesDragDropTarget&gt;


            &lt;chartingToolkit:DataPointSeriesDragDropTarget Grid.Column="1" Grid.Row="2" msWindows:DragDrop.AllowDrop="true" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"&gt;
                &lt;chartingToolkit:Chart x:Name="salaryChart" Title="Employee Salaries" &gt;
                    &lt;chartingToolkit:PieSeries IndependentValueBinding="{Binding Name}" DependentValueBinding="{Binding Salary}" Title="Salary" /&gt;
                &lt;/chartingToolkit:Chart&gt;
            &lt;/chartingToolkit:DataPointSeriesDragDropTarget&gt;
        &lt;/Grid&gt;
    &lt;/StackPanel&gt;
&lt;/UserControl&gt;
</sys:String>
    </src:SourceFile.Source>
  </src:SourceFile>
  <src:SourceFile Path="DragAndDropSample.xaml.cs">
    <src:SourceFile.Source>
      <sys:String>// (c) Copyright Microsoft Corporation.
// This source is subject to the Microsoft Public License (Ms-PL).
// Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
// All other rights reserved.

using Microsoft.Windows;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows;
using System.Windows.Input;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.DataVisualization.Charting;
using System.Linq;
namespace System.Windows.Controls.Samples
{
    /// &lt;summary&gt;
    /// A sample that demonstrates the use of the drag and drop functionality
    /// in the Silverlight Toolkit.
    /// &lt;/summary&gt;
    [Sample("Drag and Drop", DifficultyLevel.Advanced)]
    [Category("Drag and Drop")]
    public partial class DragAndDropSample : UserControl
    {
        /// &lt;summary&gt;
        /// Flattens a tech employee.
        /// &lt;/summary&gt;
        /// &lt;param name="techEmployee"&gt;The tech employee.&lt;/param&gt;
        /// &lt;returns&gt;A list including the tech employee and all reports.&lt;/returns&gt;
        private IEnumerable&lt;TechEmployee&gt; FlattenTechEmployee(TechEmployee techEmployee)
        {
            yield return techEmployee;
            foreach (TechEmployee employee in techEmployee.Reports.SelectMany(emp =&gt; FlattenTechEmployee(emp)))
            {
                yield return employee;
            }
        }

        /// &lt;summary&gt;
        /// Initializes a new instance of the DragAndDropSample class.
        /// &lt;/summary&gt;
        public DragAndDropSample()
        {
            InitializeComponent();

            treeView.ItemsSource = TechEmployee.AllTechEmployees;

            ObservableCollection&lt;TechEmployee&gt; allEmployees = new ObservableCollection&lt;TechEmployee&gt;();

            foreach (TechEmployee employee in TechEmployee.AllTechEmployees.SelectMany(emp =&gt; FlattenTechEmployee(emp)))
            {
                allEmployees.Add(employee);
            }

            fromListBox.ItemsSource = allEmployees;

            ObservableCollection&lt;TechEmployee&gt; bugsCollection = new ObservableCollection&lt;TechEmployee&gt;();
            (bugsChart.Series[0] as DataPointSeries).ItemsSource = bugsCollection;
            (bugsChart.Series[1] as DataPointSeries).ItemsSource = bugsCollection;
            (salaryChart.Series[0] as DataPointSeries).ItemsSource = new ObservableCollection&lt;TechEmployee&gt;();
        }
    }
}</sys:String>
    </src:SourceFile.Source>
  </src:SourceFile>
  <src:SourceFile Path="DragAndDropSample.xaml.vb">
    <src:SourceFile.Source>
      <sys:String>' (c) Copyright Microsoft Corporation.
' This source is subject to the Microsoft Public License (Ms-PL).
' Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
' All other rights reserved.

Imports Microsoft.VisualBasic
Imports Microsoft.Windows
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Windows
Imports System.Windows.Input
Imports System.Windows.Controls
Imports System.Windows.Controls.Primitives
Imports System.Windows.Controls.DataVisualization.Charting
Imports System.Linq

''' &lt;summary&gt;
''' A sample that demonstrates the use of the drag and drop functionality
''' in the Silverlight Toolkit.
''' &lt;/summary&gt;
&lt;Sample("Drag and Drop", DifficultyLevel.Advanced), Category("Drag and Drop")&gt; _
Partial Public Class DragAndDropSample
	Inherits UserControl
    ''' &lt;summary&gt;
    ''' Flattens a tech employee.
    ''' &lt;/summary&gt;
    ''' &lt;param name="techEmployee"&gt;The tech employee.&lt;/param&gt;
    ''' &lt;returns&gt;A list including the tech employee and all reports.&lt;/returns&gt;
    Private Function FlattenTechEmployee(ByVal techEmployee As TechEmployee) As IEnumerable(Of TechEmployee)
        Dim myTechEmployees As New ObservableCollection(Of TechEmployee)
        myTechEmployees.Add(techEmployee)

        For Each employee As TechEmployee In techEmployee.Reports.SelectMany(Function(emp) FlattenTechEmployee(emp))
            myTechEmployees.Add(employee)
        Next employee

        Return myTechEmployees
    End Function

	''' &lt;summary&gt;
	''' Initializes a new instance of the DragAndDropSample class.
	''' &lt;/summary&gt;
	Public Sub New()
		InitializeComponent()

        treeView.ItemsSource = TechEmployee.AllTechEmployees

		Dim allEmployees As New ObservableCollection(Of TechEmployee)()

        For Each employee As TechEmployee In TechEmployee.AllTechEmployees.SelectMany(Function(emp) FlattenTechEmployee(emp))
            allEmployees.Add(employee)
        Next employee

		fromListBox.ItemsSource = allEmployees

		Dim bugsCollection As New ObservableCollection(Of TechEmployee)()
		TryCast(bugsChart.Series(0), DataPointSeries).ItemsSource = bugsCollection
		TryCast(bugsChart.Series(1), DataPointSeries).ItemsSource = bugsCollection
		TryCast(salaryChart.Series(0), DataPointSeries).ItemsSource = New ObservableCollection(Of TechEmployee)()
	End Sub
End Class</sys:String>
    </src:SourceFile.Source>
  </src:SourceFile>
</src:SourceViewer>
    </StackPanel>
</UserControl>
