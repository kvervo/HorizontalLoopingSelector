//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Silverlight.Testing.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class UnitTestMessage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UnitTestMessage() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Silverlight.Testing.Properties.UnitTestMessage", typeof(UnitTestMessage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no remaining test work items.
        /// </summary>
        internal static string CompositeWorkItem_Invoke_NoRemainingWorkItems {
            get {
                return ResourceManager.GetString("CompositeWorkItem_Invoke_NoRemainingWorkItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception: Type &quot;{0}&quot; Message &quot;{1}&quot;.
        /// </summary>
        internal static string LogException {
            get {
                return ResourceManager.GetString("LogException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring &quot;{0}&quot;.
        /// </summary>
        internal static string LogIgnore {
            get {
                return ResourceManager.GetString("LogIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect exception type &quot;{0}&quot; received. Was expecting a &quot;{1}&quot; type..
        /// </summary>
        internal static string LogIncorrectExceptionType {
            get {
                return ResourceManager.GetString("LogIncorrectExceptionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Exception was observed. Was expecting a &quot;{0}&quot; type exception..
        /// </summary>
        internal static string LogNoException {
            get {
                return ResourceManager.GetString("LogNoException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag cannot be empty!.
        /// </summary>
        internal static string TagAttribute_ctor_EmptyTag {
            get {
                return ResourceManager.GetString("TagAttribute_ctor_EmptyTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag &quot;{0}&quot; contains the invalid character &quot;{1}&quot;!.
        /// </summary>
        internal static string TagAttribute_ctor_ReservedCharacter {
            get {
                return ResourceManager.GetString("TagAttribute_ctor_ReservedCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag &quot;{0}&quot; is reserved!.
        /// </summary>
        internal static string TagAttribute_ctor_ReservedTag {
            get {
                return ResourceManager.GetString("TagAttribute_ctor_ReservedTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tagExpression cannot be empty!.
        /// </summary>
        internal static string TagManager_ExpressionEvaluator_EmptyTagExpression {
            get {
                return ResourceManager.GetString("TagManager_ExpressionEvaluator_EmptyTagExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected end of tag expression &quot;{0}&quot; at position {1}!.
        /// </summary>
        internal static string TagManager_ExpressionEvaluator_ExpectedEndOfTagExpression {
            get {
                return ResourceManager.GetString("TagManager_ExpressionEvaluator_ExpectedEndOfTagExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag expected in expression &quot;{0}&quot; at position {1}!.
        /// </summary>
        internal static string TagManager_ExpressionEvaluator_ExpectedTag {
            get {
                return ResourceManager.GetString("TagManager_ExpressionEvaluator_ExpectedTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid tag expression &quot;{0}&quot; (expected &quot;{1}&quot; at position {2})!.
        /// </summary>
        internal static string TagManager_ExpressionEvaluator_InvalidTagExpression {
            get {
                return ResourceManager.GetString("TagManager_ExpressionEvaluator_InvalidTagExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag expression &quot;{0}&quot; is in use..
        /// </summary>
        internal static string TagTestRunFilter_TaggingInUse {
            get {
                return ResourceManager.GetString("TagTestRunFilter_TaggingInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusive classes are in use.
        /// </summary>
        internal static string TestClassHelper_ExclusiveClassesInUse {
            get {
                return ResourceManager.GetString("TestClassHelper_ExclusiveClassesInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusive methods are in use.
        /// </summary>
        internal static string TestMethodHelper_ExclusiveMethodsInUse {
            get {
                return ResourceManager.GetString("TestMethodHelper_ExclusiveMethodsInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The known issue could not be verified. A failure will be recorded. If this bug has been fixed, please mark the Fixed attribute value to True..
        /// </summary>
        internal static string TestMethodManager_CompleteMethod_UnVerifiedBug {
            get {
                return ResourceManager.GetString("TestMethodManager_CompleteMethod_UnVerifiedBug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No TestHarness is available..
        /// </summary>
        internal static string UnitTestCompositeWorkItem_ctor_NoTestHarness {
            get {
                return ResourceManager.GetString("UnitTestCompositeWorkItem_ctor_NoTestHarness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;{0}&quot; functionality is not supported within this unit test system..
        /// </summary>
        internal static string UnitTestContext_FeatureNotSupported {
            get {
                return ResourceManager.GetString("UnitTestContext_FeatureNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialization of UnitTestHarness.
        /// </summary>
        internal static string UnitTestHarness_Initialize_UnitTestHarnessInitialize {
            get {
                return ResourceManager.GetString("UnitTestHarness_Initialize_UnitTestHarnessInitialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No composite work items exist to be cleared..
        /// </summary>
        internal static string UnitTestHarness_RunNextStep_NoCompositeWorkItemsExist {
            get {
                return ResourceManager.GetString("UnitTestHarness_RunNextStep_NoCompositeWorkItemsExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No test classes were selected to be in the test run..
        /// </summary>
        internal static string UnitTestHarness_TestAssembliesNotActionable {
            get {
                return ResourceManager.GetString("UnitTestHarness_TestAssembliesNotActionable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test harness was not specified on test harness settings object. If a test harness settings object was passed in, please verify that it contains a reference to a test harness..
        /// </summary>
        internal static string UnitTestSystem_Run_NoTestHarnessInSettings {
            get {
                return ResourceManager.GetString("UnitTestSystem_Run_NoTestHarnessInSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test bug: A test cannot use Test Task objects, such as callbacks and conditionals, or the PumpMessages feature, unless marked with the [Asynchronous] attribute..
        /// </summary>
        internal static string WorkItemTest_EnqueueWorkItem_AsynchronousFeatureUnavailable {
            get {
                return ResourceManager.GetString("WorkItemTest_EnqueueWorkItem_AsynchronousFeatureUnavailable", resourceCulture);
            }
        }
    }
}
